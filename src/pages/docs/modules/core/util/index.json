[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A collection of utility methods.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 33,
          "offset": 32
        }
      }
    },
    "tags": [
      {
        "title": "module",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "core/util"
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 5,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 38
        }
      },
      "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
      "sortKey": "undefined 00000006"
    },
    "augments": [],
    "errors": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "module",
    "name": "core/util",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": "",
          "tags": [
            {
              "title": "class",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "Job"
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 193,
                "column": 1
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
            "sortKey": "undefined 00000005"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "fn",
              "lineNumber": 17
            },
            {
              "title": "param",
              "name": "timeout",
              "lineNumber": 17
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "class",
          "name": "Job",
          "memberof": "core/util",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": [
              {
                "description": "",
                "tags": [
                  {
                    "title": "constructor",
                    "description": null,
                    "lineNumber": 1,
                    "type": null,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 2
                  },
                  {
                    "title": "param",
                    "description": "function to execute as the requested job.",
                    "lineNumber": 3,
                    "type": {
                      "type": "NameExpression",
                      "name": "Function"
                    },
                    "name": "fn"
                  },
                  {
                    "title": "param",
                    "description": "The number of milliseconds to wait before starting the job.",
                    "lineNumber": 4,
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    },
                    "name": "timeout"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 11,
                    "column": 1
                  },
                  "end": {
                    "line": 16,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 17,
                      "column": 1
                    },
                    "end": {
                      "line": 20,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000017"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "fn",
                    "lineNumber": 3,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "function to execute as the requested job.",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 42,
                                  "offset": 41
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 42,
                              "offset": 41
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 42,
                          "offset": 41
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "Function"
                    }
                  },
                  {
                    "title": "param",
                    "name": "timeout",
                    "lineNumber": 4,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The number of milliseconds to wait before starting the job.",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 60,
                                  "offset": 59
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 60,
                              "offset": 59
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 60,
                          "offset": 59
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    }
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "class",
                "memberof": "core/util.Job",
                "name": "constructor",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "constructor",
                    "kind": "class"
                  }
                ],
                "namespace": "core/utilJobconstructor"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Starts the job.",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 16,
                              "offset": 15
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 16,
                          "offset": 15
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 3,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 4
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 5,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 6,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 1
                  },
                  "end": {
                    "line": 34,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 1
                    },
                    "end": {
                      "line": 37,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000035"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "name": "start",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "start",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobstart"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Starts the job in ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 19,
                              "offset": 18
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "timeout",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 19,
                              "offset": 18
                            },
                            "end": {
                              "line": 1,
                              "column": 28,
                              "offset": 27
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " milliseconds",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 28,
                              "offset": 27
                            },
                            "end": {
                              "line": 1,
                              "column": 41,
                              "offset": 40
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 41,
                          "offset": 40
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 3,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 4
                  },
                  {
                    "title": "param",
                    "description": "The number of milliseconds to wait before starting the job.\n                               This supersedes the timeout set at construction or by\n                               `setTimeout`.",
                    "lineNumber": 5,
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    },
                    "name": "timeout"
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 8,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 9,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "loc": {
                  "start": {
                    "line": 39,
                    "column": 1
                  },
                  "end": {
                    "line": 49,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 50,
                      "column": 1
                    },
                    "end": {
                      "line": 54,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000050"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "timeout",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The number of milliseconds to wait before starting the job.\n                               This supersedes the timeout set at construction or by\n                               ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 3,
                                  "column": 32,
                                  "offset": 176
                                },
                                "indent": [
                                  1,
                                  1
                                ]
                              }
                            },
                            {
                              "type": "inlineCode",
                              "value": "setTimeout",
                              "position": {
                                "start": {
                                  "line": 3,
                                  "column": 32,
                                  "offset": 176
                                },
                                "end": {
                                  "line": 3,
                                  "column": 44,
                                  "offset": 188
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": ".",
                              "position": {
                                "start": {
                                  "line": 3,
                                  "column": 44,
                                  "offset": 188
                                },
                                "end": {
                                  "line": 3,
                                  "column": 45,
                                  "offset": 189
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 3,
                              "column": 45,
                              "offset": 189
                            },
                            "indent": [
                              1,
                              1
                            ]
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 3,
                          "column": 45,
                          "offset": 189
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 8,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "name": "startAfter",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "startAfter",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobstartAfter"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Stops the job.",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 15,
                              "offset": 14
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 15,
                          "offset": 14
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 3,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 4
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 5,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "loc": {
                  "start": {
                    "line": 56,
                    "column": 1
                  },
                  "end": {
                    "line": 62,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 63,
                      "column": 1
                    },
                    "end": {
                      "line": 74,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000063"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "name": "stop",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "stop",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobstop"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Executes the job immediately, then prevents any other calls to ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 64,
                              "offset": 63
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "throttle()",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 64,
                              "offset": 63
                            },
                            "end": {
                              "line": 1,
                              "column": 76,
                              "offset": 75
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " from running\nuntil the ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 76,
                              "offset": 75
                            },
                            "end": {
                              "line": 2,
                              "column": 11,
                              "offset": 99
                            },
                            "indent": [
                              1
                            ]
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "timeout",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 11,
                              "offset": 99
                            },
                            "end": {
                              "line": 2,
                              "column": 20,
                              "offset": 108
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " configured at construction or via ",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 20,
                              "offset": 108
                            },
                            "end": {
                              "line": 2,
                              "column": 55,
                              "offset": 143
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "setTimeout",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 55,
                              "offset": 143
                            },
                            "end": {
                              "line": 2,
                              "column": 67,
                              "offset": 155
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " passes.",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 67,
                              "offset": 155
                            },
                            "end": {
                              "line": 2,
                              "column": 75,
                              "offset": 163
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 2,
                          "column": 75,
                          "offset": 163
                        },
                        "indent": [
                          1
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 75,
                      "offset": 163
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 4,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 5
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 6,
                    "type": {
                      "type": "RestType",
                      "expression": {
                        "type": "AllLiteral"
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 7,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  },
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 8
                  }
                ],
                "loc": {
                  "start": {
                    "line": 76,
                    "column": 1
                  },
                  "end": {
                    "line": 85,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 86,
                      "column": 1
                    },
                    "end": {
                      "line": 88,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000086"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 6,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "RestType",
                      "expression": {
                        "type": "AllLiteral"
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "access": "public",
                "name": "throttle",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "throttle",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobthrottle"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Executes the job immediately, then prevents any other calls to ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 64,
                              "offset": 63
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "throttle()",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 64,
                              "offset": 63
                            },
                            "end": {
                              "line": 1,
                              "column": 76,
                              "offset": 75
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " from running for\n",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 76,
                              "offset": 75
                            },
                            "end": {
                              "line": 2,
                              "column": 1,
                              "offset": 93
                            },
                            "indent": [
                              1
                            ]
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "timeout",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 1,
                              "offset": 93
                            },
                            "end": {
                              "line": 2,
                              "column": 10,
                              "offset": 102
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " milliseconds.",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 10,
                              "offset": 102
                            },
                            "end": {
                              "line": 2,
                              "column": 24,
                              "offset": 116
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 2,
                          "column": 24,
                          "offset": 116
                        },
                        "indent": [
                          1
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 24,
                      "offset": 116
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 4,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 5
                  },
                  {
                    "title": "param",
                    "description": "The number of milliseconds to wait before allowing the job to\n                               be ran again. This supersedes the timeout set at construction\n                               or by `setTimeout`.",
                    "lineNumber": 6,
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    },
                    "name": "timeout"
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 9,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 10,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  },
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 11
                  }
                ],
                "loc": {
                  "start": {
                    "line": 90,
                    "column": 1
                  },
                  "end": {
                    "line": 102,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 103,
                      "column": 1
                    },
                    "end": {
                      "line": 108,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000103"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "timeout",
                    "lineNumber": 6,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The number of milliseconds to wait before allowing the job to\n                               be ran again. This supersedes the timeout set at construction\n                               or by ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 3,
                                  "column": 38,
                                  "offset": 192
                                },
                                "indent": [
                                  1,
                                  1
                                ]
                              }
                            },
                            {
                              "type": "inlineCode",
                              "value": "setTimeout",
                              "position": {
                                "start": {
                                  "line": 3,
                                  "column": 38,
                                  "offset": 192
                                },
                                "end": {
                                  "line": 3,
                                  "column": 50,
                                  "offset": 204
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": ".",
                              "position": {
                                "start": {
                                  "line": 3,
                                  "column": 50,
                                  "offset": 204
                                },
                                "end": {
                                  "line": 3,
                                  "column": 51,
                                  "offset": 205
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 3,
                              "column": 51,
                              "offset": 205
                            },
                            "indent": [
                              1,
                              1
                            ]
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 3,
                          "column": 51,
                          "offset": 205
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 9,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "access": "public",
                "name": "throttleUntil",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "throttleUntil",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobthrottleUntil"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Executes job when the CPU is idle.",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 35,
                              "offset": 34
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 35,
                          "offset": 34
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 3,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 4
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 5,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 6,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  },
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 7
                  }
                ],
                "loc": {
                  "start": {
                    "line": 110,
                    "column": 1
                  },
                  "end": {
                    "line": 118,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 119,
                      "column": 1
                    },
                    "end": {
                      "line": 121,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000119"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "access": "public",
                "name": "idle",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "idle",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobidle"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Executes job when the CPU is idle, or when the timeout is reached, whichever occurs first.",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 91,
                              "offset": 90
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 91,
                          "offset": 90
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 91,
                      "offset": 90
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 3,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 4
                  },
                  {
                    "title": "param",
                    "description": "The number of milliseconds to wait before executing the\n                               job. This guarantees that the job is run, if a positive value\n                               is specified.",
                    "lineNumber": 5,
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    },
                    "name": "timeout"
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 8,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 9,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  },
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 10
                  }
                ],
                "loc": {
                  "start": {
                    "line": 123,
                    "column": 1
                  },
                  "end": {
                    "line": 134,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 135,
                      "column": 1
                    },
                    "end": {
                      "line": 145,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000135"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "timeout",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The number of milliseconds to wait before executing the\n                               job. This guarantees that the job is run, if a positive value\n                               is specified.",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 3,
                                  "column": 45,
                                  "offset": 193
                                },
                                "indent": [
                                  1,
                                  1
                                ]
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 3,
                              "column": 45,
                              "offset": 193
                            },
                            "indent": [
                              1,
                              1
                            ]
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 3,
                          "column": 45,
                          "offset": 193
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 8,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "access": "public",
                "name": "idleUntil",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "idleUntil",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobidleUntil"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Executes job before the next repaint.",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 38,
                              "offset": 37
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 38,
                          "offset": 37
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 3,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 4
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 5,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 6,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  },
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 7
                  }
                ],
                "loc": {
                  "start": {
                    "line": 147,
                    "column": 1
                  },
                  "end": {
                    "line": 155,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 156,
                      "column": 1
                    },
                    "end": {
                      "line": 158,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000156"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "access": "public",
                "name": "startRaf",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "startRaf",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobstartRaf"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Executes job before the next repaint after a given amount of timeout.",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 70,
                              "offset": 69
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 70,
                          "offset": 69
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 70,
                      "offset": 69
                    }
                  }
                },
                "tags": [
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 3,
                    "name": null
                  },
                  {
                    "title": "memberof",
                    "description": "core/util.Job",
                    "lineNumber": 4
                  },
                  {
                    "title": "param",
                    "description": "The number of milliseconds to wait before running requestAnimationFrame.",
                    "lineNumber": 5,
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    },
                    "name": "timeout"
                  },
                  {
                    "title": "param",
                    "description": "Any args passed are forwarded to the callback",
                    "lineNumber": 6,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    },
                    "name": "args"
                  },
                  {
                    "title": "returns",
                    "description": null,
                    "lineNumber": 7,
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  },
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 8
                  }
                ],
                "loc": {
                  "start": {
                    "line": 160,
                    "column": 1
                  },
                  "end": {
                    "line": 169,
                    "column": 4
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 170,
                      "column": 1
                    },
                    "end": {
                      "line": 192,
                      "column": 2
                    }
                  },
                  "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/Job.js",
                  "sortKey": "undefined 00000170"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "params": [
                  {
                    "title": "param",
                    "name": "timeout",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The number of milliseconds to wait before running requestAnimationFrame.",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 73,
                                  "offset": 72
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 73,
                              "offset": 72
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 73,
                          "offset": 72
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "Number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "args",
                    "lineNumber": 6,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Any args passed are forwarded to the callback",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 46,
                                  "offset": 45
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 46,
                              "offset": 45
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        }
                      }
                    },
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "RestType",
                        "expression": {
                          "type": "AllLiteral"
                        }
                      }
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        }
                      }
                    },
                    "title": "returns",
                    "type": {
                      "type": "UndefinedLiteral"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "kind": "function",
                "memberof": "core/util.Job",
                "access": "public",
                "name": "startRafAfter",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "core/util",
                    "kind": "module"
                  },
                  {
                    "name": "Job",
                    "kind": "class"
                  },
                  {
                    "name": "startRafAfter",
                    "kind": "function"
                  }
                ],
                "namespace": "core/utilJobstartRafAfter"
              }
            ]
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "Job",
              "kind": "class"
            }
          ],
          "namespace": "core/utilJob"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Compares the keys of two sets of children and returns ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " if they are equal.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "end": {
                        "line": 1,
                        "column": 80,
                        "offset": 79
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 80,
                    "offset": 79
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 80,
                "offset": 79
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 3,
              "name": null
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Array of children",
              "lineNumber": 5,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Node"
                  }
                ]
              },
              "name": "prev"
            },
            {
              "title": "param",
              "description": "Array of children",
              "lineNumber": 6,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Node"
                  }
                ]
              },
              "name": "next"
            },
            {
              "title": "param",
              "description": "`true` to require the same order",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Boolean"
                }
              },
              "name": "ordered"
            },
            {
              "title": "returns",
              "description": "`true` if the children are the same",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 36,
                "column": 0
              },
              "end": {
                "line": 52,
                "column": 2
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
            "sortKey": "undefined 00000036"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "prev",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of children",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Node"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "next",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of children",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Node"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "ordered",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "true",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 7,
                            "offset": 6
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " to require the same order",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 7,
                            "offset": 6
                          },
                          "end": {
                            "line": 1,
                            "column": 33,
                            "offset": 32
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Boolean"
                }
              },
              "default": "false"
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "true",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 7,
                            "offset": 6
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " if the children are the same",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 7,
                            "offset": 6
                          },
                          "end": {
                            "line": 1,
                            "column": 36,
                            "offset": 35
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "memberof": "core/util",
          "name": "childrenEquals",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "childrenEquals",
              "kind": "function"
            }
          ],
          "namespace": "core/utilchildrenEquals"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Capitalizes a given string (not locale aware).",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 47,
                        "offset": 46
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 47,
                    "offset": 46
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 47,
                "offset": 46
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 3,
              "name": null
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "The string to capitalize.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "str"
            },
            {
              "title": "returns",
              "description": "The capitalized string.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            },
            {
              "title": "public",
              "description": null,
              "lineNumber": 7
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 63,
                "column": 0
              },
              "end": {
                "line": 65,
                "column": 2
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
            "sortKey": "undefined 00000063"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "str",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The string to capitalize.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 26,
                            "offset": 25
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 26,
                    "offset": 25
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The capitalized string.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 24,
                            "offset": 23
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 24,
                        "offset": 23
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 24,
                    "offset": 23
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "memberof": "core/util",
          "access": "public",
          "name": "cap",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "cap",
              "kind": "function"
            }
          ],
          "namespace": "core/utilcap"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 4,
                        "offset": 3
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "arg",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 4,
                        "offset": 3
                      },
                      "end": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is a function, return it. Otherwise returns a function that returns ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "end": {
                        "line": 1,
                        "column": 78,
                        "offset": 77
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "arg",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 78,
                        "offset": 77
                      },
                      "end": {
                        "line": 1,
                        "column": 83,
                        "offset": 82
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 83,
                    "offset": 82
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Example:",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 84
                      },
                      "end": {
                        "line": 3,
                        "column": 9,
                        "offset": 92
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 84
                  },
                  "end": {
                    "line": 3,
                    "column": 9,
                    "offset": 92
                  },
                  "indent": []
                }
              },
              {
                "type": "code",
                "lang": null,
                "value": "const returnsZero = coerceFunction(0);\nconst returnsArg = coerceFunction(() => 0);",
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 93
                  },
                  "end": {
                    "line": 7,
                    "column": 4,
                    "offset": 183
                  },
                  "indent": [
                    1,
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 7,
                "column": 4,
                "offset": 183
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 9
            },
            {
              "title": "param",
              "description": "Function or value",
              "lineNumber": 10,
              "type": {
                "type": "AllLiteral"
              },
              "name": "arg"
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 0
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 79,
                "column": 56
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
            "sortKey": "undefined 00000079"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "arg",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Function or value",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "AllLiteral"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "memberof": "core/util",
          "name": "coerceFunction",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "coerceFunction",
              "kind": "function"
            }
          ],
          "namespace": "core/utilcoerceFunction"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 4,
                        "offset": 3
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "arg",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 4,
                        "offset": 3
                      },
                      "end": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is array-like, return it. Otherwise returns a single element array containing ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "end": {
                        "line": 1,
                        "column": 88,
                        "offset": 87
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "arg",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 88,
                        "offset": 87
                      },
                      "end": {
                        "line": 1,
                        "column": 93,
                        "offset": 92
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 93,
                    "offset": 92
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Example:",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 94
                      },
                      "end": {
                        "line": 3,
                        "column": 9,
                        "offset": 102
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 94
                  },
                  "end": {
                    "line": 3,
                    "column": 9,
                    "offset": 102
                  },
                  "indent": []
                }
              },
              {
                "type": "code",
                "lang": null,
                "value": "const returnsArray = coerceArray(0); // [0]\nconst returnsArg = coerceArray([0]); // [0]\nconst returnsObjArg = coerceArray({0: 'zeroth', length: 1});",
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 103
                  },
                  "end": {
                    "line": 8,
                    "column": 4,
                    "offset": 259
                  },
                  "indent": [
                    1,
                    1,
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 8,
                "column": 4,
                "offset": 259
              }
            }
          },
          "tags": [
            {
              "title": "see",
              "description": "http://ramdajs.com/docs/#isArrayLike",
              "lineNumber": 9
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 10,
              "name": null
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 11
            },
            {
              "title": "param",
              "description": "Array or value",
              "lineNumber": 12,
              "type": {
                "type": "AllLiteral"
              },
              "name": "array"
            },
            {
              "title": "returns",
              "description": "Either `array` or `[array]`",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 96,
                "column": 0
              },
              "end": {
                "line": 98,
                "column": 2
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
            "sortKey": "undefined 00000096"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "array",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array or value",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 15,
                            "offset": 14
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 15,
                    "offset": 14
                  }
                }
              },
              "type": {
                "type": "AllLiteral"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "array",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 15,
                            "offset": 14
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " or ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 15,
                            "offset": 14
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "[array]",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 28,
                        "offset": 27
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 28,
                    "offset": 27
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "sees": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "http://ramdajs.com/docs/#isArrayLike",
                      "children": [
                        {
                          "type": "text",
                          "value": "http://ramdajs.com/docs/#isArrayLike",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 37,
                              "offset": 36
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 37,
                          "offset": 36
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                }
              }
            }
          ],
          "throws": [],
          "todos": [],
          "kind": "function",
          "memberof": "core/util",
          "name": "coerceArray",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "coerceArray",
              "kind": "function"
            }
          ],
          "namespace": "core/utilcoerceArray"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Loosely determines if ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "tag",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "end": {
                        "line": 1,
                        "column": 28,
                        "offset": 27
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is a renderable component (either a string or a function)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 28,
                        "offset": 27
                      },
                      "end": {
                        "line": 1,
                        "column": 86,
                        "offset": 85
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 86,
                    "offset": 85
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 86,
                "offset": 85
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 3,
              "name": null
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Component to tes",
              "lineNumber": 5,
              "type": {
                "type": "AllLiteral"
              },
              "name": "tag"
            },
            {
              "title": "returns",
              "description": "`true` if `tag` is renderable",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 100,
              "column": 0
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 108,
                "column": 0
              },
              "end": {
                "line": 111,
                "column": 2
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
            "sortKey": "undefined 00000108"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "tag",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Component to tes",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  }
                }
              },
              "type": {
                "type": "AllLiteral"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "true",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 7,
                            "offset": 6
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " if ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 7,
                            "offset": 6
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "tag",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " is renderable",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "memberof": "core/util",
          "name": "isRenderable",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "isRenderable",
              "kind": "function"
            }
          ],
          "namespace": "core/utilisRenderable"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Removes ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "aria-",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " prefixed props and the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "role",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " prop from ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "end": {
                        "line": 1,
                        "column": 57,
                        "offset": 56
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "props",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 57,
                        "offset": 56
                      },
                      "end": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " and returns them in a new object.\nUseful when redirecting ARIA-related props from a non-focusable root element to a focusable\nchild element.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "end": {
                        "line": 3,
                        "column": 15,
                        "offset": 204
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 15,
                    "offset": 204
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 15,
                "offset": 204
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": null
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": "Props object",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "props"
            },
            {
              "title": "returns",
              "description": "ARIA-related props",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 0
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 123,
                "column": 0
              },
              "end": {
                "line": 133,
                "column": 2
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
            "sortKey": "undefined 00000123"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "props",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Props object",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 13,
                            "offset": 12
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 13,
                        "offset": 12
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 13,
                    "offset": 12
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "ARIA-related props",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "memberof": "core/util",
          "name": "extractAriaProps",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "extractAriaProps",
              "kind": "function"
            }
          ],
          "namespace": "core/utilextractAriaProps"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gets current timestamp of either ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "window.performance.now",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "end": {
                        "line": 1,
                        "column": 58,
                        "offset": 57
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " or ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 58,
                        "offset": 57
                      },
                      "end": {
                        "line": 1,
                        "column": 62,
                        "offset": 61
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "Date.now",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 62,
                        "offset": 61
                      },
                      "end": {
                        "line": 1,
                        "column": 72,
                        "offset": 71
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 72,
                    "offset": 71
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 72,
                "offset": 71
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 3,
              "name": null
            },
            {
              "title": "memberof",
              "description": "core/util",
              "lineNumber": 4
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 135,
              "column": 0
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 142,
                "column": 0
              },
              "end": {
                "line": 148,
                "column": 2
              }
            },
            "file": "/Users/teck/enact/enact-docs/node_modules/enact/packages/core/util/util.js",
            "sortKey": "undefined 00000142"
          },
          "augments": [],
          "errors": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "memberof": "core/util",
          "name": "perfNow",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "core/util",
              "kind": "module"
            },
            {
              "name": "perfNow",
              "kind": "function"
            }
          ],
          "namespace": "core/utilperfNow"
        }
      ]
    },
    "path": [
      {
        "name": "core/util",
        "kind": "module"
      }
    ],
    "namespace": "core/util"
  }
]